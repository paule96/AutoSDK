//HintName: G.Models.FunctionToolCall.g.cs

#nullable enable

namespace G
{
    /// <summary>
    /// A tool call to run a function. See the <br/>
    /// [function calling guide](/docs/guides/function-calling) for more information.
    /// </summary>
    public sealed partial class FunctionToolCall
    {
        /// <summary>
        /// The unique ID of the function tool call.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The type of the function tool call. Always `function_call`.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("type")]
        public global::G.FunctionToolCallType Type { get; set; }

        /// <summary>
        /// The unique ID of the function tool call generated by the model.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("call_id", Required = global::Newtonsoft.Json.Required.Always)]
        public string CallId { get; set; } = default!;

        /// <summary>
        /// The name of the function to run.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("name", Required = global::Newtonsoft.Json.Required.Always)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// A JSON string of the arguments to pass to the function.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("arguments", Required = global::Newtonsoft.Json.Required.Always)]
        public string Arguments { get; set; } = default!;

        /// <summary>
        /// The status of the item. One of `in_progress`, `completed`, or<br/>
        /// `incomplete`. Populated when items are returned via API.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("status")]
        public global::G.FunctionToolCallStatus? Status { get; set; }

        /// <summary>
        /// Additional properties that are not explicitly defined in the schema
        /// </summary>
        [global::Newtonsoft.Json.JsonExtensionData]
        public global::System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get; set; } = new global::System.Collections.Generic.Dictionary<string, object>();

        /// <summary>
        /// Initializes a new instance of the <see cref="FunctionToolCall" /> class.
        /// </summary>
        /// <param name="id">
        /// The unique ID of the function tool call.
        /// </param>
        /// <param name="type">
        /// The type of the function tool call. Always `function_call`.
        /// </param>
        /// <param name="callId">
        /// The unique ID of the function tool call generated by the model.
        /// </param>
        /// <param name="name">
        /// The name of the function to run.
        /// </param>
        /// <param name="arguments">
        /// A JSON string of the arguments to pass to the function.
        /// </param>
        /// <param name="status">
        /// The status of the item. One of `in_progress`, `completed`, or<br/>
        /// `incomplete`. Populated when items are returned via API.
        /// </param>
        public FunctionToolCall(
            string callId,
            string name,
            string arguments,
            string? id,
            global::G.FunctionToolCallType type,
            global::G.FunctionToolCallStatus? status)
        {
            this.CallId = callId ?? throw new global::System.ArgumentNullException(nameof(callId));
            this.Name = name ?? throw new global::System.ArgumentNullException(nameof(name));
            this.Arguments = arguments ?? throw new global::System.ArgumentNullException(nameof(arguments));
            this.Id = id;
            this.Type = type;
            this.Status = status;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="FunctionToolCall" /> class.
        /// </summary>
        public FunctionToolCall()
        {
        }
    }
}